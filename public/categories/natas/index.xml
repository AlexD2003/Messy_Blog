<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Natas on My messy collection</title>
    <link>//localhost:1313/categories/natas/</link>
    <description>Recent content in Natas on My messy collection</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <copyright>Copyright © 2008–2019</copyright>
    <lastBuildDate>Fri, 27 Sep 2024 16:24:57 +0300</lastBuildDate>
    <atom:link href="//localhost:1313/categories/natas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Natas-Level 24</title>
      <link>//localhost:1313/post/natas24/</link>
      <pubDate>Fri, 27 Sep 2024 16:24:57 +0300</pubDate>
      <guid>//localhost:1313/post/natas24/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas24&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: MeuqmfJ8DDKuTr5pcvzFKSwlxedZYEWd&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas24.natas.labs.overthewire.org&#34;&gt;http://natas24.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.programiz.com/c-programming/library-function/string.h/strcmp&#34;&gt;strcmp&lt;/a&gt;&lt;br&gt;&#xA;The strcmp() function compares two strings character by character. If the strings are equal, the function returns 0.&lt;br&gt;&#xA;&lt;a href=&#34;https://medium.com/@capturethebugs/common-c-vulnerabilities-56ffad22581e&#34;&gt;Common C vulnerabilities.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;This is another quick solution, the index page seems to take in the input as password and that is about it.&lt;/p&gt;&#xA;&lt;img src=&#34;//localhost:1313/img/natas/natas24-1.png&#34; alt=&#34;gif&#34; style=&#34;display: block; margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p&gt;Let`s take a look at the code section.&lt;br&gt;&#xA;&lt;strong&gt;Relevant snippet :&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    if(array_key_exists(&amp;#34;passwd&amp;#34;,$_REQUEST)){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        if(!strcmp($_REQUEST[&amp;#34;passwd&amp;#34;],&amp;#34;&amp;lt;censored&amp;gt;&amp;#34;)){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            echo &amp;#34;&amp;lt;br&amp;gt;The credentials for the next level are:&amp;lt;br&amp;gt;&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            echo &amp;#34;&amp;lt;pre&amp;gt;Username: natas25 Password: &amp;lt;censored&amp;gt;&amp;lt;/pre&amp;gt;&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        else{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            echo &amp;#34;&amp;lt;br&amp;gt;Wrong!&amp;lt;br&amp;gt;&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    // morla / 10111&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;This is a 1 to 1 copy of the &lt;strong&gt;natas 23&lt;/strong&gt; level, the only difference being that this time, we know nothing about the expected input. In order to get access for the next level, the result of the strcmp function should be 1 &amp;lt;=&amp;gt; strcmp returns 0 which only occurs when the strins are equal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 23</title>
      <link>//localhost:1313/post/natas23/</link>
      <pubDate>Wed, 18 Sep 2024 15:52:06 +0300</pubDate>
      <guid>//localhost:1313/post/natas23/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas23&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: dIUQcI3uSus1JEOSSWRAEXBG8KbR8tRs&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas23.natas.labs.overthewire.org&#34;&gt;http://natas23.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cplusplus.com/reference/cstring/strstr/&#34;&gt;strstr&lt;/a&gt;&lt;br&gt;&#xA;A pointer to the first occurrence in str1 of the entire sequence of characters specified in str2, or a null pointer if the sequence is not present in str1.&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;This is another quick solution, the index page seems to take in the input as password and that is about it.&lt;/p&gt;&#xA;&lt;img src=&#34;//localhost:1313/img/natas/natas23-1.png&#34; alt=&#34;gif&#34; style=&#34;display: block; margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p&gt;Let`s take a look at the code section.&lt;br&gt;&#xA;&lt;strong&gt;Relevant snippet :&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 22</title>
      <link>//localhost:1313/post/natas22/</link>
      <pubDate>Wed, 18 Sep 2024 15:12:32 +0300</pubDate>
      <guid>//localhost:1313/post/natas22/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas22&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: d8rwGBl0Xslg3b76uh3fEbSlnOUBlozz&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas22.natas.labs.overthewire.org&#34;&gt;http://natas22.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;br&gt;&#xA;URL manipulation is one of the easiest attacks to perform. It can be performed by users who are innocently curious or by hackers who are probing for vulnerabilities.&#xA;URLs are not just addresses for browsers and servers to use as users go from page to page using links. They are requests from the browser to the server which act as a low-level form of programming. When the browser requests X from the server, the server responds with Y. There is nothing to keep users from entering other &amp;ldquo;commands&amp;rdquo; into the browser bar to see what the server will give them back.&lt;br&gt;&#xA;&lt;a href=&#34;https://guides.codepath.com/websecurity/URL-Manipulation&#34;&gt;Source.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 21</title>
      <link>//localhost:1313/post/natas21/</link>
      <pubDate>Wed, 18 Sep 2024 12:48:00 +0300</pubDate>
      <guid>//localhost:1313/post/natas21/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas21&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: BPhv63cKE1lkQl04cE5CuFTzXe15NfiH&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas21.natas.labs.overthewire.org&#34;&gt;http://natas21.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;The index is pretty short, mainly communicating that this website is colocated with another adress and the text &lt;strong&gt;You are logged in as a regular user. Login as an admin to retrieve credentials for natas22&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 20</title>
      <link>//localhost:1313/post/natas20/</link>
      <pubDate>Tue, 10 Sep 2024 11:59:40 +0300</pubDate>
      <guid>//localhost:1313/post/natas20/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas20&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: p5mCvP7GS2K6Bmt3gqhM2Fc1A5T8MVyw&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas20.natas.labs.overthewire.org&#34;&gt;http://natas20.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;The index page of &lt;strong&gt;natas 20&lt;/strong&gt; gives a quick prompt of &lt;strong&gt;You are logged in as a regular user. Login as an admin to retrieve credentials for natas21&lt;/strong&gt;. It is the same premise as for &lt;strong&gt;natas 19&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 19</title>
      <link>//localhost:1313/post/natas19/</link>
      <pubDate>Tue, 27 Aug 2024 12:53:35 +0300</pubDate>
      <guid>//localhost:1313/post/natas19/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas19&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: tnwER7PdfWkxsG4FNWUtoAZ9VyZTJqJr&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas19.natas.labs.overthewire.org&#34;&gt;http://natas19.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;What is brute-forcing?&lt;/a&gt;&lt;br&gt;&#xA;In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Python_(programming_language)&#34;&gt;What is python?&lt;/a&gt;&lt;br&gt;&#xA;Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented and functional programming.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/HTTP_cookie&#34;&gt;What is a cookie?🍪&lt;/a&gt;&lt;br&gt;&#xA;HTTP cookies are small blocks of data created by a web server while a user is browsing a website and placed on the user&amp;rsquo;s computer or other device by the user&amp;rsquo;s web browser. Cookies are placed on the device used to access a website, and more than one cookie may be placed on a user&amp;rsquo;s device during a session.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 18</title>
      <link>//localhost:1313/post/natas18/</link>
      <pubDate>Mon, 26 Aug 2024 14:47:03 +0300</pubDate>
      <guid>//localhost:1313/post/natas18/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas18&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: 6OG1PbKdVjyBlpxgD4DDbRG6ZLlCGgCJ&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas18.natas.labs.overthewire.org&#34;&gt;http://natas18.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;What is brute-forcing?&lt;/a&gt;&lt;br&gt;&#xA;In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Python_(programming_language)&#34;&gt;What is python?&lt;/a&gt;&lt;br&gt;&#xA;Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented and functional programming.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/PHP&#34;&gt;What is php?&lt;/a&gt;&lt;br&gt;&#xA;PHP is a general-purpose scripting language geared towards web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1993 and released in 1995. The PHP reference implementation is now produced by the PHP Group.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 17</title>
      <link>//localhost:1313/post/natas17/</link>
      <pubDate>Sun, 25 Aug 2024 21:17:22 +0300</pubDate>
      <guid>//localhost:1313/post/natas17/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas17&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: EqjHJbo7LFNb8vwhHb9s75hokh5TF0OC&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas17.natas.labs.overthewire.org&#34;&gt;http://natas17.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;solution-ideahttpsmediumcomsamarthkokil64overthewire-updated-natas-walkthrough-level-17-00dd519c7689&#34;&gt;&lt;a href=&#34;https://medium.com/@samarthkokil64/overthewire-updated-natas-walkthrough-level-17-00dd519c7689&#34;&gt;Solution idea&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;What is brute-forcing?&lt;/a&gt;&lt;br&gt;&#xA;In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Python_(programming_language)&#34;&gt;What is python?&lt;/a&gt;&lt;br&gt;&#xA;Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented and functional programming.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/PHP&#34;&gt;What is php?&lt;/a&gt;&lt;br&gt;&#xA;PHP is a general-purpose scripting language geared towards web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1993 and released in 1995. The PHP reference implementation is now produced by the PHP Group.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;What is SQL?&lt;/a&gt;&lt;br&gt;&#xA;Structured Query Language is a domain-specific language used to manage data, especially in a relational database management system. It is particularly useful in handling structured data, i.e., data incorporating relations among entities and variables.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;What is SQL injection?&lt;/a&gt;&lt;br&gt;&#xA;In computing, SQL injection is a code injection technique used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 16</title>
      <link>//localhost:1313/post/natas16/</link>
      <pubDate>Sat, 24 Aug 2024 14:37:52 +0300</pubDate>
      <guid>//localhost:1313/post/natas16/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas16&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: hPkjKYviLQctEW33QmuXL6eDVfMW4sGo&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas16.natas.labs.overthewire.org&#34;&gt;http://natas16.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;What is brute-forcing?&lt;/a&gt;&lt;br&gt;&#xA;In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Python_(programming_language)&#34;&gt;What is python?&lt;/a&gt;&lt;br&gt;&#xA;Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented and functional programming.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/PHP&#34;&gt;What is php?&lt;/a&gt;&lt;br&gt;&#xA;PHP is a general-purpose scripting language geared towards web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1993 and released in 1995. The PHP reference implementation is now produced by the PHP Group.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 15</title>
      <link>//localhost:1313/post/natas15/</link>
      <pubDate>Fri, 23 Aug 2024 15:10:52 +0300</pubDate>
      <guid>//localhost:1313/post/natas15/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas15&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: SdqIqBsFcz3yotlNYErZSZwblkm0lrvx&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas15.natas.labs.overthewire.org&#34;&gt;http://natas15.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;What is SQL?&lt;/a&gt;&lt;br&gt;&#xA;Structured Query Language is a domain-specific language used to manage data, especially in a relational database management system. It is particularly useful in handling structured data, i.e., data incorporating relations among entities and variables.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;What is SQL injection?&lt;/a&gt;&lt;br&gt;&#xA;In computing, SQL injection is a code injection technique used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Brute-force_attack&#34;&gt;What is brute-forcing?&lt;/a&gt;&lt;br&gt;&#xA;In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Python_(programming_language)&#34;&gt;What is python?&lt;/a&gt;&lt;br&gt;&#xA;Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented and functional programming.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 14</title>
      <link>//localhost:1313/post/natas14/</link>
      <pubDate>Thu, 22 Aug 2024 14:17:44 +0300</pubDate>
      <guid>//localhost:1313/post/natas14/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas14&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: z3UYcr4v4uBpeX8f7EZbMHlzK4UR2XtQ&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas14.natas.labs.overthewire.org&#34;&gt;http://natas14.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL&#34;&gt;What is SQL?&lt;/a&gt;&lt;br&gt;&#xA;Structured Query Language is a domain-specific language used to manage data, especially in a relational database management system. It is particularly useful in handling structured data, i.e., data incorporating relations among entities and variables.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/SQL_injection&#34;&gt;What is SQL injection?&lt;/a&gt;&lt;br&gt;&#xA;In computing, SQL injection is a code injection technique used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 13</title>
      <link>//localhost:1313/post/natas13/</link>
      <pubDate>Wed, 21 Aug 2024 16:17:53 +0300</pubDate>
      <guid>//localhost:1313/post/natas13/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas13&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: trbs5pCjCrkuSknBBKHhaBxq6Wm1j3LC&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas13.natas.labs.overthewire.org&#34;&gt;http://natas13.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection&#34;&gt;What is PHP injection?&lt;/a&gt;&lt;br&gt;&#xA;PHP Object Injection is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context. The vulnerability occurs when user-supplied input is not properly sanitized before being passed to the unserialize() PHP function. Since PHP allows object serialization, attackers could pass ad-hoc serialized strings to a vulnerable unserialize() call, resulting in an arbitrary PHP object(s) injection into the application scope.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 12</title>
      <link>//localhost:1313/post/natas12/</link>
      <pubDate>Wed, 21 Aug 2024 15:19:34 +0300</pubDate>
      <guid>//localhost:1313/post/natas12/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas12&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: yZdkjAYZRd3R7tq7T5kXMjMJlOIkzDeB&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas12.natas.labs.overthewire.org&#34;&gt;http://natas12.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&#34;https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection&#34;&gt;What is PHP injection?&lt;/a&gt;&lt;br&gt;&#xA;PHP Object Injection is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context. The vulnerability occurs when user-supplied input is not properly sanitized before being passed to the unserialize() PHP function. Since PHP allows object serialization, attackers could pass ad-hoc serialized strings to a vulnerable unserialize() call, resulting in an arbitrary PHP object(s) injection into the application scope.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 11</title>
      <link>//localhost:1313/post/natas11/</link>
      <pubDate>Wed, 21 Aug 2024 11:56:21 +0300</pubDate>
      <guid>//localhost:1313/post/natas11/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas11&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: UJdqkK1pTu6VLt9UHWAgRZz6sVUZ3lEk&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas11.natas.labs.overthewire.org&#34;&gt;http://natas11.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution-ideahttpswwwyoutubecomchrisdale&#34;&gt;&lt;a href=&#34;https://www.youtube.com/@ChrisDale&#34;&gt;Solution Idea&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;tools&#34;&gt;Tools&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef/&#34;&gt;CyberChef&lt;/a&gt;&lt;br&gt;&#xA;Very usefull site for encrypting and decrypting information.&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/cd/E19047-01/sunscreen151/806-5397/i996724/index.html&#34;&gt;What is encryption and decryption?&lt;/a&gt;&lt;br&gt;&#xA;Encryption is the process by which a readable message is converted to an unreadable form to prevent unauthorized parties from reading it. Decryption is the process of converting an encrypted message back to its original (readable) format. The original message is called the plaintext message. The encrypted message is called the ciphertext message.&lt;br&gt;&#xA;Digital encryption algorithms work by manipulating the digital content of a plaintext message mathematically, using an encryption algorithm and a digital key to produce a ciphertext version of the message. The sender and recipient can communicate securely if the sender and recipient are the only ones who know the key.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/XOR_cipher&#34;&gt;What is XOR encryption?&lt;/a&gt;&lt;br&gt;&#xA;The XOR operator is extremely common as a component in more complex ciphers. By itself, using a constant repeating key, a simple XOR cipher can trivially be broken using frequency analysis. If the content of any message can be guessed or otherwise known then the key can be revealed. Its primary merit is that it is simple to implement, and that the XOR operation is computationally inexpensive. A simple repeating XOR (i.e. using the same key for xor operation on the whole data) cipher is therefore sometimes used for hiding information in cases where no particular security is required. The XOR cipher is often used in computer malware to make reverse engineering more difficult.&lt;br&gt;&#xA;&lt;a href=&#34;https://policies.google.com/technologies/cookies?hl=en-US#:~:text=Cookies%20are%20small%20pieces%20of,site%20more%20useful%20to%20you.&#34;&gt;What are cookies?🍪&lt;/a&gt;&lt;br&gt;&#xA;Cookies are small pieces of text sent to your browser by a website you visit. They help that website remember information about your visit, which can both make it easier to visit the site again and make the site more useful to you.&#xA;&lt;strong&gt;My bad drawing skills expressed on a whiteboard:&lt;/strong&gt;&#xA;&lt;img src=&#34;//localhost:1313/img/natas/natas11-nustiusadesenez.jpeg&#34; alt=&#34;gif&#34; style=&#34;display: block; margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;br&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 10</title>
      <link>//localhost:1313/post/natas10/</link>
      <pubDate>Tue, 20 Aug 2024 17:01:43 +0300</pubDate>
      <guid>//localhost:1313/post/natas10/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas10&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: t7I5VHvpa14sJTUGV0cbEsbYfFP2dmOu&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas10.natas.labs.overthewire.org&#34;&gt;http://natas10.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://owasp.org/www-community/attacks/Command_Injection&#34;&gt;What is command injection?&lt;/a&gt;&lt;br&gt;&#xA;Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation.&lt;br&gt;&#xA;This attack differs from Code Injection, in that code injection allows the attacker to add their own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 9</title>
      <link>//localhost:1313/post/natas9/</link>
      <pubDate>Tue, 20 Aug 2024 16:29:39 +0300</pubDate>
      <guid>//localhost:1313/post/natas9/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas9&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: ZE1ck82lmdGIoErlhQgWND6j2Wzz6b6t&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas9.natas.labs.overthewire.org&#34;&gt;http://natas9.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://owasp.org/www-community/attacks/Command_Injection&#34;&gt;What is command injection?&lt;/a&gt;&lt;br&gt;&#xA;Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation.&lt;br&gt;&#xA;This attack differs from Code Injection, in that code injection allows the attacker to add their own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 8</title>
      <link>//localhost:1313/post/natas8/</link>
      <pubDate>Tue, 20 Aug 2024 15:26:33 +0300</pubDate>
      <guid>//localhost:1313/post/natas8/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas8&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: xcoXLmzMkoIP9D7hlgPlh9XD7OgLAe5Q&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas8.natas.labs.overthewire.org&#34;&gt;http://natas8.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_number&#34;&gt;What is Binary?&lt;/a&gt;&lt;br&gt;&#xA;A binary number is a number expressed in the base-2 numeral system or binary numeral system, a method for representing numbers that uses only two symbols for the natural numbers: typically &amp;ldquo;0&amp;rdquo; and &amp;ldquo;1&amp;rdquo;.&lt;br&gt;&#xA;&lt;a href=&#34;https://he3app.com/blogs/understanding-hex-encode-a-guide-for-developers#:~:text=Hex%20Encoding%20is%20a%20popular%20method%20for%20encoding%20data%20that,networks%20or%20stored%20in%20databases.&#34;&gt;What is Hex?&lt;/a&gt;&lt;br&gt;&#xA;Hex Encoding is a popular method for encoding data that is widely used by developers to improve data security. This encoding method helps to make data more secure by converting binary data into ASCII or Unicode text that can be transmitted over networks or stored in databases.&lt;br&gt;&#xA;&lt;a href=&#34;https://www.geeksforgeeks.org/strrev-function-in-c/&#34;&gt;Strrev&lt;/a&gt;&lt;br&gt;&#xA;The strrev() function is a built-in function in C and is defined in string.h header file. The strrev() function is used to reverse the given string.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Base64&#34;&gt;What is base64?&lt;/a&gt;&lt;br&gt;&#xA;In computer programming, Base64 is a group of binary-to-text encoding schemes that transforms binary data into a sequence of printable characters, limited to a set of 64 unique characters. More specifically, the source binary data is taken 6 bits at a time, then this group of 6 bits is mapped to one of 64 unique characters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 7</title>
      <link>//localhost:1313/post/natas7/</link>
      <pubDate>Tue, 20 Aug 2024 15:10:38 +0300</pubDate>
      <guid>//localhost:1313/post/natas7/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas7&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: bmg8SvU1LizuWjx3y7xkNERkHxGre0GS&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas7.natas.labs.overthewire.org&#34;&gt;http://natas7.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.w3schools.com/c/c_intro.php&#34;&gt;What is php&lt;/a&gt;&lt;br&gt;&#xA;PHP is a general-purpose scripting language geared towards web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1993 and released in 1995. The PHP reference implementation is now produced by the PHP Group.&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;At the first look, there is nothing on this page exept 2 hyperlinks that both point to a page named Home, About respectivly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 6</title>
      <link>//localhost:1313/post/natas6/</link>
      <pubDate>Tue, 20 Aug 2024 14:14:57 +0300</pubDate>
      <guid>//localhost:1313/post/natas6/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas6&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: 0RoJwHdSKWFTYR5WuiAewauSuNaBXned&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas6.natas.labs.overthewire.org&#34;&gt;http://natas6.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.w3schools.com/c/c_intro.php&#34;&gt;What is C?&lt;/a&gt;&lt;br&gt;&#xA;C is a general-purpose programming language created by Dennis Ritchie at the Bell Laboratories in 1972.&lt;br&gt;&#xA;It is a very popular language, despite being old. The main reason for its popularity is because it is a fundamental language in the field of computer science.&lt;br&gt;&#xA;C is strongly associated with UNIX, as it was developed to write the UNIX operating system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 5</title>
      <link>//localhost:1313/post/natas5/</link>
      <pubDate>Tue, 20 Aug 2024 14:02:37 +0300</pubDate>
      <guid>//localhost:1313/post/natas5/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas5&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: 0n35PkggAPm2zbEpOU802c0x0Msn1ToK&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas5.natas.labs.overthewire.org&#34;&gt;http://natas5.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;Burp Suite is a proprietary software tool for security assessment and penetration testing of web applications. It software was initially developed in 2003-2006 by Dafydd Stuttard to automate his own security testing needs, after realizing the capabilities of automatable web tools like Selenium.&lt;br&gt;&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burp_Suite&#34;&gt;Source.&lt;/a&gt;&lt;br&gt;&#xA;Burp Suite tutorial and usefull guides:&lt;br&gt;&#xA;&lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/getting-started&#34;&gt;Port Swigger.&lt;/a&gt;&lt;br&gt;&#xA;What is a proxy server?&lt;br&gt;&#xA;A proxy server is a system or router that provides a gateway between users and the internet. Therefore, it helps prevent cyber attackers from entering a private network. It is a server, referred to as an “intermediary” because it goes between end-users and the web pages they visit online.&lt;br&gt;&#xA;When a computer connects to the internet, it uses an IP address. This is similar to your home’s street address, telling incoming data where to go and marking outgoing data with a return address for other devices to authenticate. A proxy server is essentially a computer on the internet that has an IP address of its own.&lt;br&gt;&#xA;&lt;a href=&#34;https://www.fortinet.com/resources/cyberglossary/proxy-server&#34;&gt;Source.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 4</title>
      <link>//localhost:1313/post/natas4/</link>
      <pubDate>Tue, 20 Aug 2024 12:52:52 +0300</pubDate>
      <guid>//localhost:1313/post/natas4/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas4&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: QryZXc2e0zahULdHrtHxzyYkj59kUxLQ&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas4.natas.labs.overthewire.org&#34;&gt;http://natas4.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;tools&#34;&gt;Tools&lt;/h3&gt;&#xA;&lt;p&gt;From here on out, simply inspecting the page won`t be sufficient in order to solve these level. We will need to make use of some networking tools in order to perform certain actions and exploit vulnerabilities. The primary tool I will be using will be &lt;a href=&#34;https://portswigger.net/burp&#34;&gt;Burp suite&lt;/a&gt;. If you are on linux, install the package correspondent to your distribution. Otherwise follow the download and install page on &lt;strong&gt;portswigger&lt;/strong&gt;. As always, and this is valid for any tool, feel free to use whatever software you want or can get your hands onto as long as it has the necessary abilities to complete the task at hand, however, the documentation and solution will be provided in accordance to the tools I use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 3</title>
      <link>//localhost:1313/post/natas3/</link>
      <pubDate>Tue, 20 Aug 2024 12:15:26 +0300</pubDate>
      <guid>//localhost:1313/post/natas3/</guid>
      <description>&lt;h1 id=&#34;solution-idea&#34;&gt;Solution idea&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mcpa.github.io/natas/wargame/web/overthewire/2015/09/28/natas03/&#34;&gt;Hammer of thor&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas3&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: 3gqisGdR0pjm6tpkDKdIWO2hSvchLeYH&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas3.natas.labs.overthewire.org&#34;&gt;http://natas3.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.hubspot.com/website/how-to-inspect#:~:text=What%20does%20%E2%80%9Cinspect%20element%E2%80%9D%20mean,live%20inside%20the%20browser%20window.&#34;&gt;What is inspect element?&lt;/a&gt;&lt;br&gt;&#xA;Inspect element is a feature of modern web browsers that enables anyone to view and edit a website’s source code, including its HTML, CSS, JavaScript, and media files. When the source code is modified with the inspect tool, the changes are shown live inside the browser window.&lt;br&gt;&#xA;&lt;a href=&#34;https://slickplan.com/blog/types-of-website-structure#:~:text=The%20website&#39;s%20structure%20refers%20to,%2C%20sequential%2C%20matrix%20and%20database.&#34;&gt;How is a webpage structured?&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;By inspecting the page, you can see a text snippet that says :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- No more information leaks!! Not even Google will find it this time... --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 2</title>
      <link>//localhost:1313/post/natas2/</link>
      <pubDate>Tue, 20 Aug 2024 11:34:10 +0300</pubDate>
      <guid>//localhost:1313/post/natas2/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas2&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: TguMNxKo1DSa1tujBLuZJnDUlCcUAPlI&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas2.natas.labs.overthewire.org&#34;&gt;http://natas2.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.hubspot.com/website/how-to-inspect#:~:text=What%20does%20%E2%80%9Cinspect%20element%E2%80%9D%20mean,live%20inside%20the%20browser%20window.&#34;&gt;What is inspect element?&lt;/a&gt;&lt;br&gt;&#xA;Inspect element is a feature of modern web browsers that enables anyone to view and edit a website’s source code, including its HTML, CSS, JavaScript, and media files. When the source code is modified with the inspect tool, the changes are shown live inside the browser window.&lt;br&gt;&#xA;&lt;a href=&#34;https://slickplan.com/blog/types-of-website-structure#:~:text=The%20website&#39;s%20structure%20refers%20to,%2C%20sequential%2C%20matrix%20and%20database.&#34;&gt;How is a webpage structured?&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;At the first entry on the page, we are prompted with the text &amp;ldquo;There is nothing on this page&amp;rdquo;. Surprisingly, this time that is actually correct. After a quick inspection we can see that the dot at the end of the sentance is actually an image. This wouldn`t be very uselfull usually but in the img tag, we can see that the image is locally hosted and we are prompted with the actual location of the image. If you understand how a webpage is structured, you can see that it is possible to navigate the contents if you know what you are looking for.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 1</title>
      <link>//localhost:1313/post/natas1/</link>
      <pubDate>Tue, 20 Aug 2024 10:17:35 +0300</pubDate>
      <guid>//localhost:1313/post/natas1/</guid>
      <description>&lt;h3 id=&#34;login&#34;&gt;Login&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Username: natas1&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Password: 0nzCigAq7t2iALyvU9xcHlYN4MlkIwlq&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;URL:      &lt;a href=&#34;http://natas1.natas.labs.overthewire.org&#34;&gt;http://natas1.natas.labs.overthewire.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;doc&#34;&gt;Doc&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.hubspot.com/website/how-to-inspect#:~:text=What%20does%20%E2%80%9Cinspect%20element%E2%80%9D%20mean,live%20inside%20the%20browser%20window.&#34;&gt;What is inspect element?&lt;/a&gt;&lt;br&gt;&#xA;Inspect element is a feature of modern web browsers that enables anyone to view and edit a website’s source code, including its HTML, CSS, JavaScript, and media files. When the source code is modified with the inspect tool, the changes are shown live inside the browser window.&lt;/p&gt;&#xA;&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;&#xA;&lt;p&gt;As per the previous level, this is gonna be an incredibly simple sollution. You are prompted with the text that just like before, the password is hidden in the webpage. The difference now is that you cannot right click on the page in order to inspect it. You can still use &lt;strong&gt;Ctrl+Shift+i&lt;/strong&gt; or whatever bind you would have on your browser to enter inspect mode and that`s about it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Natas-Level 0</title>
      <link>//localhost:1313/post/natas0/</link>
      <pubDate>Mon, 19 Aug 2024 22:46:42 +0300</pubDate>
      <guid>//localhost:1313/post/natas0/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;This is the introductory level for the &amp;ldquo;Natas&amp;rdquo; wargame hosted by &lt;a href=&#34;https://overthewire.org/wargames/natas/&#34;&gt;Overthewire&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-natas&#34;&gt;What is Natas?&lt;/h3&gt;&#xA;&lt;p&gt;Natas teaches the basics of serverside web-security.&lt;/p&gt;&#xA;&lt;p&gt;Each level of natas consists of its own website located at &lt;a href=&#34;http://natasX.natas.labs.overthewire.org&#34;&gt;http://natasX.natas.labs.overthewire.org&lt;/a&gt;, where X is the level number. There is no SSH login. To access a level, enter the username for that level (e.g. natas0 for level 0) and its password.&lt;/p&gt;&#xA;&lt;p&gt;Each level has access to the password of the next level. Your job is to somehow obtain that next password and level up. All passwords are also stored in /etc/natas_webpass/. E.g. the password for natas5 is stored in the file /etc/natas_webpass/natas5 and only readable by natas4 and natas5.&#xA;&lt;a href=&#34;https://overthewire.org/wargames/natas/&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
